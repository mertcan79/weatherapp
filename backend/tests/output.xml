<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.1.1 (Python 3.10.8 on darwin)" generated="20230828 18:02:01.655" rpa="false" schemaversion="4">
<suite id="s1" name="Tests" source="/Users/mert/Downloads/weatherapp-master 2/backend/tests">
<suite id="s1-s1" name="Test" source="/Users/mert/Downloads/weatherapp-master 2/backend/tests/test.robot">
<test id="s1-s1-t1" name="VerifyMockServerResponse" line="11">
<kw name="Create Session" library="RequestsLibrary">
<arg>mock-server</arg>
<arg>${MOCK_SERVER_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230828 18:02:01.861" level="INFO">Creating Session using : alias=mock-server, url=http://0.0.0.0:3001/mock-forecast, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230828 18:02:01.855" endtime="20230828 18:02:01.862"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>mock-server</arg>
<arg>/</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230828 18:02:01.886" level="INFO">GET Request : url=http://0.0.0.0:3001/mock-forecast/ 
 path_url=/mock-forecast/ 
 headers={'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230828 18:02:01.886" level="INFO">GET Response : url=http://0.0.0.0:3001/mock-forecast/ 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '106', 'ETag': 'W/"6a-hrm9pPXxwRGmZRF5D8P9rO2S/xQ"', 'Date': 'Mon, 28 Aug 2023 14:45:55 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"list":[{"dt_txt":"2023-08-27 15:00:00","main":{"temp":300.91},"weather":[{"description":"clear sky"}]}]} 
 </msg>
<msg timestamp="20230828 18:02:01.886" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230828 18:02:01.863" endtime="20230828 18:02:01.886"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${response_json}</var>
<arg>json.loads($response.content)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230828 18:02:01.902" level="INFO">${response_json} = {'list': [{'dt_txt': '2023-08-27 15:00:00', 'main': {'temp': 300.91}, 'weather': [{'description': 'clear sky'}]}]}</msg>
<status status="PASS" starttime="20230828 18:02:01.887" endtime="20230828 18:02:01.902"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${expected_data}</var>
<arg>json.loads('''${EXPECTED_DATA}''')</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230828 18:02:01.903" level="INFO">${expected_data} = {'list': [{'dt_txt': '2023-08-27 15:00:00', 'main': {'temp': 300.91}, 'weather': [{'description': 'clear sky'}]}]}</msg>
<status status="PASS" starttime="20230828 18:02:01.902" endtime="20230828 18:02:01.903"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response_json}</arg>
<arg>${expected_data}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230828 18:02:01.903" endtime="20230828 18:02:01.904"/>
</kw>
<doc>Verify that the mock server returns expected data</doc>
<tag>smoke</tag>
<status status="PASS" starttime="20230828 18:02:01.850" endtime="20230828 18:02:01.905"/>
</test>
<status status="PASS" starttime="20230828 18:02:01.694" endtime="20230828 18:02:01.908"/>
</suite>
<status status="PASS" starttime="20230828 18:02:01.657" endtime="20230828 18:02:01.909"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Test">Tests.Test</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20230828 18:02:01.848" level="ERROR">Error in file '/Users/mert/Downloads/weatherapp-master 2/backend/tests/test.robot' on line 4: Importing library 'JSONLibrary' failed: ModuleNotFoundError: No module named 'JSONLibrary'
Traceback (most recent call last):
  None
PYTHONPATH:
  /Library/Frameworks/Python.framework/Versions/3.10/bin
  /Library/Frameworks/Python.framework/Versions/3.10/lib/python310.zip
  /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10
  /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/lib-dynload
  /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages</msg>
</errors>
</robot>
